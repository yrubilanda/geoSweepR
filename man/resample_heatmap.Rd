% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resample_heatmap.R
\name{resample_heatmap}
\alias{resample_heatmap}
\title{Resampled Kernel Density Heatmap}
\usage{
resample_heatmap(
  data,
  lat_col,
  lon_col,
  n_samples = NULL,
  col_data = NULL,
  filter_by = NULL,
  basemap = NULL,
  input_crs = 4326
)
}
\arguments{
\item{data}{Required. A data frame with your point data. Needs to have latitude and longitude columns.}

\item{lat_col}{Required. A string for the name of your latitude column}

\item{lon_col}{Required. A string for the name of your longitude column}

\item{n_samples}{Optional. Integer to re-sample either entire dataset or optional filtered data. Default is set to multiply the number of rows by 1000.}

\item{col_data}{Optional. Name of the column you are using to filter your data. Can be categorical or factor data for filtering purposes.}

\item{filter_by}{Optional. Name of the value to filter the \code{col_data} column by values. Only works when \code{col_data} is also included.}

\item{basemap}{Optional. A spatial object (e.g., an \code{sf} or \code{raster} object) to use as background for plot.}

\item{input_crs}{Optional. Specify a different EPSG code or PROJ string for CRS in your input data. Default coordinate system is EPSG:4326 (WGS 84).}
}
\value{
A ggplot2 heatmap of resampled data â€” you can print it, save it, or add more layers if you want. And a resampled_data object with the data frame.
}
\description{
Create a 2D Kernel Density Heatmap from Latitude and Longitude with Optional Filter and Basemap Using Resampled Data

This function is an alternative to the make_heatmap() function.
This function will resample data to create a heatmap when there isn't sufficient data.
Can be used to resample filtered data or the whole data set.
When the resample size is not specified, it will multiply the number of rows by 1000 as a default.
It generates a smooth heatmap from latitude and longitude coordinates.You can also add a base-map.
}
\examples{
# Sample Data:
my_data <- read.csv(system.file("extdata", "dc_sample.csv", package = "geoSweepR"))
my_basemap <- terra::rast(system.file("extdata", "my_basemap.tif", package = "geoSweepR"))

# Plot all resampled data without filtering or specifying resample size.
resample_heatmap(data = my_data, lat_col = "latitude", lon_col = "longitude")

# Plot filtered data and specify resample size.
# - Example uses only "Homicide" and resamples to 10000.
resample_heatmap(data = my_data, lat_col = "latitude", lon_col = "longitude",
                 col_data = "offense", filter_by = "Homicide", n_samples = 10000)

# Plot filtered data, specify resample size, and add a basemap layer underneath.
# - Example uses only "Homicide" and resamples to 10000.
resample_heatmap(data = my_data, lat_col = "latitude", lon_col = "longitude",
                 col_data = "offense", filter_by = "Homicide", n_samples = 10000,
                 basemap = my_basemap)

}
